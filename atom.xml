<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Seven93517</title>
  
  <subtitle>我不生产代码，我只是代码的搬运工</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://seven93517.github.io/"/>
  <updated>2019-01-23T03:07:26.558Z</updated>
  <id>https://seven93517.github.io/</id>
  
  <author>
    <name>Seven93517</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux（Ubuntu） Crontab 定时任务笔记</title>
    <link href="https://seven93517.github.io/2019/01/23/Linux-Crontab-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%AC%94%E8%AE%B0/"/>
    <id>https://seven93517.github.io/2019/01/23/Linux-Crontab-定时任务笔记/</id>
    <published>2019-01-23T03:04:36.000Z</published>
    <updated>2019-01-23T03:07:26.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="crontab-的服务"><a href="#crontab-的服务" class="headerlink" title="crontab 的服务"></a><code>crontab</code> 的服务</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service crond <span class="built_in">start</span><span class="comment"> //启动服务</span></span><br><span class="line">service crond <span class="built_in">stop</span><span class="comment"> //关闭服务</span></span><br><span class="line">service crond restart<span class="comment"> //重启服务</span></span><br><span class="line">service crond reload<span class="comment"> //重新载入配置</span></span><br></pre></td></tr></table></figure><h2 id="crontab-的使用"><a href="#crontab-的使用" class="headerlink" title="crontab 的使用"></a><code>crontab</code> 的使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab [-u username]　//省略用户表表示操作当前用户的crontab</span><br><span class="line">    -e      (编辑工作表)</span><br><span class="line">    -l      (列出工作表里的命令)</span><br><span class="line">    -r      (删除工作作)</span><br></pre></td></tr></table></figure><blockquote><ul><li>用 <code>crontab</code> 配置是针对某个用户的，而编辑 <code>/etc/crontab</code> 是针对系统的任务</li><li>（系统级的）做系统级配置建议直接配置 <code>vim /etc/crontab</code></li><li>（用户级的）一般还是建使用 <code>crontab -e</code></li></ul></blockquote><h2 id="crontab-e-结果"><a href="#crontab-e-结果" class="headerlink" title="crontab -e 结果"></a><code>crontab -e</code> 结果</h2><ul><li><code>crontab -e</code> 结果存放在 <code>/var/spool/cron/crontabs</code> 中</li></ul><h2 id="crontab-的命令"><a href="#crontab-的命令" class="headerlink" title="crontab 的命令"></a><code>crontab</code> 的命令</h2><blockquote><p><code>crontab</code> 的命令构成为 时间+动作，其时间有分、时、日、月、周五种。</p></blockquote><h2 id="crontab的命令时间操作符"><a href="#crontab的命令时间操作符" class="headerlink" title="crontab的命令时间操作符:"></a>crontab的命令时间操作符:</h2><ul><li><code>*</code> 取值范围内的所有数字</li><li><code>/</code> 每过多少个数字</li><li><code>-</code> 从X到Z</li><li><code>,</code> 散列数字</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">实例1：每1分钟执行一次myCommand</span><br><span class="line">* * * * * myCommand</span><br><span class="line"></span><br><span class="line">实例2：每小时的第3和第15分钟执行</span><br><span class="line">3,15 * * * * myCommand</span><br><span class="line"></span><br><span class="line">实例3：在上午8点到11点的第3和第15分钟执行</span><br><span class="line">3,15 8-11 * * * myCommand</span><br><span class="line"></span><br><span class="line">实例4：每隔两天的上午8点到11点的第3和第15分钟执行</span><br><span class="line">3,15 8-11 */2  *  * myCommand</span><br><span class="line"></span><br><span class="line">实例5：每周一上午8点到11点的第3和第15分钟执行</span><br><span class="line">3,15 8-11 * * 1 myCommand</span><br><span class="line"></span><br><span class="line">实例6：每晚的21:30重启smb</span><br><span class="line">30 21 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例7：每月1、10、22日的4 : 45重启smb</span><br><span class="line">45 4 1,10,22 * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例8：每周六、周日的1 : 10重启smb</span><br><span class="line">10 1 * * 6,0 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb</span><br><span class="line">0,30 18-23 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例10：每星期六的晚上11 : 00 pm重启smb</span><br><span class="line">0 23 * * 6 /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例11：每一小时重启smb</span><br><span class="line">* */1 * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例12：晚上11点到早上7点之间，每隔一小时重启smb</span><br><span class="line">* 23-7/1 * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure><hr><h2 id="crontab-的编辑器问题"><a href="#crontab-的编辑器问题" class="headerlink" title="crontab 的编辑器问题"></a><code>crontab</code> 的编辑器问题</h2><ul><li><p>第一次使用<code>crontab</code> 时，会出现<br><code>no crontab for root - using an empty one“Select a editor......”</code>下面有几个选项，让你选择编辑器</p></li><li><p><code>crontab</code> 默认编辑器为 <code>nano</code> ,修改 <code>crontab</code> 默认编辑器为 <code>vim</code> 或者其他的编辑器</p></li><li><p>重新选择编辑器</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@5dxh5:~<span class="comment"># select-editor</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Select</span> an editor.  <span class="keyword">To</span> <span class="keyword">change</span> later, run <span class="string">'select-editor'</span>.</span><br><span class="line">  <span class="number">1.</span> /<span class="keyword">bin</span>/ed</span><br><span class="line">  <span class="number">2.</span> /<span class="keyword">bin</span>/nano        &lt;<span class="comment">---- easiest</span></span><br><span class="line">  <span class="number">3.</span> /usr/<span class="keyword">bin</span>/vim.basic</span><br><span class="line">  <span class="number">4.</span> /usr/<span class="keyword">bin</span>/vim.tiny</span><br><span class="line"></span><br><span class="line"><span class="keyword">Choose</span> <span class="number">1</span><span class="number">-4</span> [<span class="number">2</span>]: <span class="number">3</span></span><br><span class="line">root@<span class="number">5</span>dxh5:~<span class="comment">#</span></span><br></pre></td></tr></table></figure></li></ul><hr><ul><li>参考链接：<ul><li><a href="http://www.runoob.com/w3cnote/linux-crontab-tasks.html" target="_blank" rel="noopener">Linux Crontab 定时任务 | 菜鸟教程</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;crontab-的服务&quot;&gt;&lt;a href=&quot;#crontab-的服务&quot; class=&quot;headerlink&quot; title=&quot;crontab 的服务&quot;&gt;&lt;/a&gt;&lt;code&gt;crontab&lt;/code&gt; 的服务&lt;/h2&gt;&lt;figure class=&quot;highlight
      
    
    </summary>
    
      <category term="Linux" scheme="https://seven93517.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://seven93517.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://seven93517.github.io/tags/Ubuntu/"/>
    
      <category term="服务器" scheme="https://seven93517.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>CSS中的BFC(块级格式化上下文)</title>
    <link href="https://seven93517.github.io/2019/01/18/CSS%E4%B8%AD%E7%9A%84BFC-%E5%9D%97%E7%BA%A7%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    <id>https://seven93517.github.io/2019/01/18/CSS中的BFC-块级格式化上下文/</id>
    <published>2019-01-18T02:44:44.000Z</published>
    <updated>2019-01-18T02:46:20.187Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>流体特性<br>块级元素，如div元素（下同），在默认情况下（非浮动、绝对定位等），水平方向会自动填满外部的容器；如果有 <code>margin-left</code> <code>margin-right</code> <code>padding-left</code> <code>padding-right</code> <code>border-left-width</code> <code>border-right-width</code> 等，实际内容区域会响应变窄。</p></li><li><p><code>BFC</code>：块级格式化上下文（<code>Block formatting context</code> ）。<br>它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。</p></li><li><p>BFC元素特性表现原则就是，内部子元素再怎么翻江倒海，翻云覆雨都不会影响外部的元素。</p></li></ul><hr><ul><li>BFC布局规则：<ul><li>内部的盒子会在垂直方向，一个接一个地放置。</li><li>盒子垂直方向的距离由 <code>margin</code> 决定。属于同一个  <code>BFC</code> 的两个相邻盒子的 <code>margin</code> 会发生重叠</li><li>每个元素的 <code>margin</code> 盒子的左边， 与包含块<code>border</code> 盒子的左边相接触。即使存在浮动也是如此。</li><li><code>BFC</code> 的区域不会与<code>float</code> 盒子重叠。</li><li><code>BFC</code> 就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。</li><li>计算 <code>BFC</code> 的高度时，浮动元素也参与计算</li></ul></li></ul><hr><ul><li>触发BFC：<ul><li>float的值不为none。</li><li>overflow的值为auto,scroll或hidden。</li><li>display的值为table-cell, table-caption, inline-block中的任何一个。</li><li>position的值不为relative和static</li></ul></li></ul><hr><ul><li>参考链接：<ul><li><a href="http://www.zhangxinxu.com/wordpress/2015/02/css-deep-understand-flow-bfc-column-two-auto-layout/" target="_blank" rel="noopener">张鑫旭：CSS深入理解流体特性和BFC特性下多栏自适应布局</a></li><li><a href="http://www.cnblogs.com/lhb25/p/inside-block-formatting-ontext.html" target="_blank" rel="noopener">梦想天空：前端精选文摘：BFC 神奇背后的原理</a> </li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;流体特性&lt;br&gt;块级元素，如div元素（下同），在默认情况下（非浮动、绝对定位等），水平方向会自动填满外部的容器；如果有 &lt;code&gt;margin-left&lt;/code&gt; &lt;code&gt;margin-right&lt;/code&gt; &lt;code&gt;padding-le
      
    
    </summary>
    
      <category term="Web 前端" scheme="https://seven93517.github.io/categories/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Web 前端" scheme="https://seven93517.github.io/tags/Web-%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://seven93517.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 项目中 Mybatis 获取添加的自增主键ID</title>
    <link href="https://seven93517.github.io/2019/01/16/SpringBoot-%E9%A1%B9%E7%9B%AE%E4%B8%AD-Mybatis-%E8%8E%B7%E5%8F%96%E6%B7%BB%E5%8A%A0%E7%9A%84%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AEID/"/>
    <id>https://seven93517.github.io/2019/01/16/SpringBoot-项目中-Mybatis-获取添加的自增主键ID/</id>
    <published>2019-01-16T03:14:18.000Z</published>
    <updated>2019-01-16T04:38:03.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li>项目中遇到了 <code>insert</code> 后需要知道保存成功记录的自增 <code>id</code> 。然后根据自增 <code>id</code> 去做一系列的相关操作。</li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h4 id="insert-语句最后添加-SELECT-LAST-INSERT-ID-方式"><a href="#insert-语句最后添加-SELECT-LAST-INSERT-ID-方式" class="headerlink" title="insert 语句最后添加 SELECT LAST_INSERT_ID()方式"></a><code>insert</code> 语句最后添加 <code>SELECT LAST_INSERT_ID()</code>方式</h4><ul><li>添加的内容：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;selectKey keyProperty="id" resultType="Integer" order="AFTER"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">LAST_INSERT_ID</span>() <span class="keyword">as</span> <span class="keyword">id</span></span><br><span class="line">&lt;/selectKey&gt;</span><br></pre></td></tr></table></figure><ul><li>用法：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;insert id="add" parameterType="org.stm.entity.Student"&gt;</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> ssm_student(<span class="keyword">name</span>,age,birthday,sex) <span class="keyword">value</span>(<span class="comment">#&#123;name&#125;,#&#123;age&#125;,#&#123;birthday&#125;,#&#123;sex&#125;)</span></span><br><span class="line">        &lt;selectKey keyProperty=<span class="string">"id"</span> <span class="keyword">order</span>=<span class="string">"AFTER"</span> resultType=<span class="string">"int"</span>&gt;</span><br><span class="line">                        <span class="keyword">select</span>  <span class="keyword">last_insert_id</span>()</span><br><span class="line">        &lt;/selectKey&gt;</span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="在-insert-节点添加-userGeneratedKeys-、keyProperty、-keyColumn-属性"><a href="#在-insert-节点添加-userGeneratedKeys-、keyProperty、-keyColumn-属性" class="headerlink" title="在 insert 节点添加 userGeneratedKeys 、keyProperty、 keyColumn 属性"></a>在 <code>insert</code> 节点添加 <code>userGeneratedKeys</code> 、<code>keyProperty</code>、 <code>keyColumn</code> 属性</h4><ul><li>用法：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;insert id="add" parameterType="org.stm.entity.Student" useGeneratedKeys="true", keyProperty="id", keyColumn="id"&gt;</span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> student(<span class="keyword">name</span>,age,birthday,sex) <span class="keyword">value</span>(<span class="comment">#&#123;name&#125;,#&#123;age&#125;,#&#123;birthday&#125;,#&#123;sex&#125;)</span></span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>注意事项：<br>  需要注意的是需要把实体类传进来。<code>keyProperty</code> 为自增的 <code>id</code> 字段。调用 <code>insert</code> 后自动将自增 <code>id</code> 赋值进 <code>insert</code> 调用的实体类中</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//新建对象</span></span><br><span class="line">Student student = <span class="keyword">new</span> Student();</span><br><span class="line">student.setName(name); </span><br><span class="line">studentDao.add(student);</span><br><span class="line"></span><br><span class="line"><span class="comment">//这时student.getId()就可以获取到自增主键了</span></span><br><span class="line">Integer id = student.getId();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;项目中遇到了 &lt;code&gt;insert&lt;/code&gt; 后需要知道保存成功记录的自增 &lt;code&gt;id&lt;/code
      
    
    </summary>
    
      <category term="Java" scheme="https://seven93517.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://seven93517.github.io/tags/Java/"/>
    
      <category term="项目实战" scheme="https://seven93517.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>项目中相对敏感但不属于隐私、机密的文件的显示处理</title>
    <link href="https://seven93517.github.io/2019/01/15/%E7%9B%B8%E5%AF%B9%E6%95%8F%E6%84%9F%E4%BD%86%E4%B8%8D%E5%B1%9E%E4%BA%8E%E9%9A%90%E7%A7%81%E3%80%81%E6%9C%BA%E5%AF%86%E7%9A%84%E6%96%87%E4%BB%B6%E7%9A%84%E6%98%BE%E7%A4%BA%E5%A4%84%E7%90%86/"/>
    <id>https://seven93517.github.io/2019/01/15/相对敏感但不属于隐私、机密的文件的显示处理/</id>
    <published>2019-01-15T03:23:54.000Z</published>
    <updated>2019-01-16T04:37:57.761Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li>我们在做项目中，经常需要在网页来显示一些相对敏感但不属于隐私、机密的图片、音频、视频等文件。比如：上传具有版权的文件、交易过程中所需的图凭证、用户拍摄的日常生活小视频等。我们需要对这些相对敏感但不属于隐私、机密的图片、音频、视频等文件进行一个防盗链处理，从根源上避免这些资源文件一旦链接被发现引用后，就一直处于被盗用状态。</li></ul><hr><h2 id="pivotaltracker-的处理方法"><a href="#pivotaltracker-的处理方法" class="headerlink" title="pivotaltracker 的处理方法"></a><code>pivotaltracker</code> 的处理方法</h2><ul><li><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><h4 id="1-pivotaltracker-的S3示例1："><a href="#1-pivotaltracker-的S3示例1：" class="headerlink" title="1. pivotaltracker 的S3示例1："></a>1. <code>pivotaltracker</code> 的S3示例1：</h4>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//s3.amazonaws.com/prod.tracker2/resource/66682357/j2.png?response-content-disposition=inline&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAJEX3ET63U5T77TYA%2F20170106%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20170106T032907Z&amp;X-Amz-Expires=1800&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=78b0dd206dbb0078652f6e7de7f6ab074905cf7de19767b7bf0950d33e6e63db</span></span><br></pre></td></tr></table></figure><h4 id="2-pivotaltracker-的S3示例2："><a href="#2-pivotaltracker-的S3示例2：" class="headerlink" title="2. pivotaltracker 的S3示例2："></a>2. <code>pivotaltracker</code> 的S3示例2：</h4>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//s3.amazonaws.com/prod.tracker2/resource/66682357/j2.png?response-content-disposition=inline&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAJEX3ET63U5T77TYA%2F20170106%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20170106T044121Z&amp;X-Amz-Expires=1800&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=0539da8c5f140c3002605a1f6a8cbcc8b8c543007be8f8f3a106fd6a84b2815d</span></span><br></pre></td></tr></table></figure><h4 id="3-pivotaltracker-的S3示例3："><a href="#3-pivotaltracker-的S3示例3：" class="headerlink" title="3. pivotaltracker 的S3示例3："></a>3. <code>pivotaltracker</code> 的S3示例3：</h4>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//s3.amazonaws.com/prod.tracker2/resource/66682359/j3.png?response-content-disposition=inline&amp;X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAJEX3ET63U5T77TYA%2F20170106%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20170106T044429Z&amp;X-Amz-Expires=1800&amp;X-Amz-SignedHeaders=host&amp;X-Amz-Signature=2b407bcbd53f9ae36238d0315d60a69b7bdc0a22af6d47fafcc4f39a45d4e55f</span></span><br></pre></td></tr></table></figure></li><li><h3 id="从pivotaltracker-S3的链接可看出通过以下四个参数来判断当前链接是否有效："><a href="#从pivotaltracker-S3的链接可看出通过以下四个参数来判断当前链接是否有效：" class="headerlink" title="从pivotaltracker S3的链接可看出通过以下四个参数来判断当前链接是否有效："></a>从<code>pivotaltracker</code> S3的链接可看出通过以下四个参数来判断当前链接是否有效：</h3><ul><li><code>X-Amz-Credential</code></li><li><code>X-Amz-Date</code></li><li><code>X-Amz-Expires</code></li><li><code>X-Amz-Signature</code></li></ul></li></ul><hr><h2 id="制定方案"><a href="#制定方案" class="headerlink" title="制定方案"></a>制定方案</h2><ol><li><code>Model</code>调整，敏感数据图片保存至私有目录<code>private</code>下</li><li><code>Helper</code>调整，新建一个<code>PrivateHelper</code>方法，用于为<code>private</code>下的资源自动产生访问链接</li><li>新建<code>PrivateController</code>，拦截<code>private</code>下的资源访问，通过权限验证进行访问控制。详细步骤：<ul><li>参数签名校验，防止篡改：<br>  <code>sign(X-Amz-Credential,X-Amz-Date,X-Amz-Expires) == X-Amz-Signature</code></li><li>有效期判断，过期直接返回错误</li><li>用户权限判断，无权限返回错误</li><li>返回图片</li></ul></li></ol><hr><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h4 id="1-PrivateController-rb"><a href="#1-PrivateController-rb" class="headerlink" title="1. PrivateController.rb"></a>1. <code>PrivateController.rb</code></h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrivateController</span> &lt; ApplicationController</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">show</span></span></span><br><span class="line">     </span><br><span class="line">     credential = params[<span class="string">"X-Amz-Credential"</span>]</span><br><span class="line">     date = params[<span class="string">"X-Amz-Date"</span>]</span><br><span class="line">     expries = params[<span class="string">"X-Amz-Expires"</span>]</span><br><span class="line">     signature = params[<span class="string">"X-Amz-Signature"</span>]</span><br><span class="line">     model = params[<span class="string">"model"</span>]</span><br><span class="line">     image = params[<span class="string">"image"</span>]</span><br><span class="line">     format = params[<span class="string">"format"</span>]</span><br><span class="line">     <span class="comment">#缺少参数 render 404</span></span><br><span class="line">     <span class="keyword">if</span> credential.blank? <span class="params">||</span> date.blank? <span class="params">||</span> expries.blank? <span class="params">||</span> signature.blank? <span class="params">||</span> model.blank? <span class="params">||</span>image.blank? <span class="params">||</span> format.blank?</span><br><span class="line">       render_404 <span class="keyword">and</span> <span class="keyword">return</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line">     <span class="comment">#过期时间不符合 render 404</span></span><br><span class="line">     <span class="keyword">if</span> (Time.now.to_i - date.to_i) &gt; expries.to_i</span><br><span class="line">       render_404 <span class="keyword">and</span> <span class="keyword">return</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line">     <span class="comment">#签名不对 render 404</span></span><br><span class="line">     <span class="keyword">if</span> signature != Digest::MD5.hexdigest(<span class="string">"seven93517<span class="subst">#&#123;credential.to_s + date.to_s + expries.to_s &#125;</span>"</span>)</span><br><span class="line">       render_404 <span class="keyword">and</span> <span class="keyword">return</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line">      <span class="comment">#credential不对 render 404</span></span><br><span class="line">      user = User.where(<span class="symbol">app_login_token:</span> credential).first</span><br><span class="line">     <span class="keyword">if</span> user.blank?</span><br><span class="line">       render_404 <span class="keyword">and</span> <span class="keyword">return</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">     <span class="comment">#send_file "assets/product_default.png", :disposition =&gt; 'inline',  :x_sendfile =&gt; true # .jpg will pass as format</span></span><br><span class="line">     send_file  <span class="string">"<span class="subst">#&#123;Rails.root&#125;</span>/private/<span class="subst">#&#123;model&#125;</span>/<span class="subst">#&#123;image&#125;</span>.<span class="subst">#&#123;format&#125;</span>"</span>, <span class="symbol">:disposition</span> =&gt; <span class="string">'inline'</span>,  <span class="symbol">:x_sendfile</span> =&gt; <span class="literal">true</span> <span class="comment"># .jpg will pass as format</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  private</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">render_404</span></span></span><br><span class="line">    render <span class="symbol">:file</span> =&gt; <span class="string">'public/404.html'</span>, <span class="symbol">:status</span> =&gt; <span class="symbol">:not_found</span>, <span class="symbol">:layout</span> =&gt; <span class="literal">false</span> </span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="2-PrivateHelper-rb"><a href="#2-PrivateHelper-rb" class="headerlink" title="2. PrivateHelper.rb"></a>2. <code>PrivateHelper.rb</code></h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'digest/md5'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ApplicationHelper</span></span></span><br><span class="line">  </span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line">  <span class="comment">#校验私有图片的地址</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">generate_private_image_url</span><span class="params">(image,token=<span class="string">""</span>)</span></span></span><br><span class="line">    <span class="keyword">if</span> image.blank?</span><br><span class="line">      <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> current_user.present? &amp;&amp; current_user.app_login_token.present? &amp;&amp; token.blank?</span><br><span class="line">       token = current_user.app_login_token</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    params = &#123;<span class="string">"X-Amz-Credential"</span> =&gt; token,<span class="string">"X-Amz-Date"</span> =&gt; Time.now.to_i, <span class="string">"X-Amz-Expires"</span> =&gt; <span class="string">"1800"</span>&#125;</span><br><span class="line">    params[<span class="string">"X-Amz-Signature"</span>] = Digest::MD5.hexdigest(<span class="string">"seven93517<span class="subst">#&#123;params[<span class="string">'X-Amz-Credential'</span>].to_s + params[<span class="string">'X-Amz-Date'</span>].to_s + params[<span class="string">'X-Amz-Expires'</span>].to_s &#125;</span>"</span>)</span><br><span class="line">    render_private_image_path(<span class="symbol">:model</span> =&gt;<span class="string">""</span>,<span class="symbol">:image</span> =&gt; image.split(<span class="string">"?"</span>)[<span class="number">0</span>],<span class="symbol">:params</span> =&gt; params)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  ...</span><br><span class="line">  </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="3-View-Page"><a href="#3-View-Page" class="headerlink" title="3. View Page"></a>3. <code>View Page</code></h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= image_tag generate_private_image_url(image.url(<span class="symbol">:small</span>)) %&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><ul><li><a href="http://stackoverflow.com/questions/2752497/how-to-store-private-pictures-and-videos-in-ruby-on-rails" target="_blank" rel="noopener">http://stackoverflow.com/questions/2752497/how-to-store-private-pictures-and-videos-in-ruby-on-rails</a></li><li><a href="http://stackoverflow.com/questions/22056228/how-to-display-image-from-private-folder-inside-view" target="_blank" rel="noopener">http://stackoverflow.com/questions/22056228/how-to-display-image-from-private-folder-inside-view</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a&gt;使用场景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;我们在做项目中，经常需要在网页来显示一些相对敏感但不属于隐私、机密的图片、音频、视频等文件。比如：上传具有版权的
      
    
    </summary>
    
      <category term="Ruby on Rails" scheme="https://seven93517.github.io/categories/Ruby-on-Rails/"/>
    
    
      <category term="项目实战" scheme="https://seven93517.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="Ruby on Rails" scheme="https://seven93517.github.io/tags/Ruby-on-Rails/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 下 Mysql 开启远程访问</title>
    <link href="https://seven93517.github.io/2019/01/14/mysql%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE/"/>
    <id>https://seven93517.github.io/2019/01/14/mysql开启远程访问/</id>
    <published>2019-01-14T06:21:07.000Z</published>
    <updated>2019-01-16T04:44:46.818Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql开启远程访问分三步"><a href="#mysql开启远程访问分三步" class="headerlink" title="mysql开启远程访问分三步"></a>mysql开启远程访问分三步</h2><ul><li>第一步:注释 <code>bind-address = 127.0.0.1</code>；</li><li>第二步:增加允许远程访问的用户或者允许现有用户的远程访问；</li><li>第三步:退出并重启数据库。</li></ul><h2 id="第一步-注释-bind-address-127-0-0-1"><a href="#第一步-注释-bind-address-127-0-0-1" class="headerlink" title="第一步:注释 bind-address = 127.0.0.1"></a>第一步:注释 <code>bind-address = 127.0.0.1</code></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line">...</span><br><span class="line"><span class="comment"># Instead of skip-networking the default is now to listen only on</span></span><br><span class="line"><span class="comment"># localhost which is more compatible and is not less secure.</span></span><br><span class="line"><span class="comment"># bind-address          = 127.0.0.1</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="第二步-增加允许远程访问的用户或者允许现有用户的远程访问"><a href="#第二步-增加允许远程访问的用户或者允许现有用户的远程访问" class="headerlink" title="第二步:增加允许远程访问的用户或者允许现有用户的远程访问"></a>第二步:增加允许远程访问的用户或者允许现有用户的远程访问</h2><ul><li><p>方案一：给root授予在任意主机（%）访问任意数据库的所有权限。</p><blockquote><p>如果需要指定访问主机，可以把%替换为主机的IP或者主机名。这种方法会在数据库mysql的表user中，增加一条记录。</p></blockquote></li></ul><pre><code><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant <span class="literal">all</span> privileges <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">'root'</span>@<span class="string">'%'</span> identified <span class="keyword">by</span> <span class="string">'123456'</span> <span class="keyword">with</span> grant option;</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>方案二：如果不想增加记录，只是想把某个已存在的用户（例如root）修改成允许远程主机访问，则可以使用如下SQL来完成：</p> <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">mysql&gt; select t.host <span class="keyword">from</span><span class="built_in"> user </span>t where t.<span class="attribute">user</span>=<span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line">+--------------+</span><br><span class="line">|  host        |</span><br><span class="line">+--------------+</span><br><span class="line">|  localhost   |</span><br><span class="line">+--------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; update<span class="built_in"> user </span><span class="builtin-name">set</span> <span class="attribute">host</span>=<span class="string">'%'</span> where <span class="attribute">user</span>=<span class="string">'root'</span>;</span><br></pre></td></tr></table></figure></li></ul><h2 id="第三步-退出并重启数据库"><a href="#第三步-退出并重启数据库" class="headerlink" title="第三步:退出并重启数据库"></a>第三步:退出并重启数据库</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">&gt; sudo service mysql restart</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mysql开启远程访问分三步&quot;&gt;&lt;a href=&quot;#mysql开启远程访问分三步&quot; class=&quot;headerlink&quot; title=&quot;mysql开启远程访问分三步&quot;&gt;&lt;/a&gt;mysql开启远程访问分三步&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;第一步:注释 &lt;code&gt;bin
      
    
    </summary>
    
      <category term="mysql" scheme="https://seven93517.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://seven93517.github.io/tags/mysql/"/>
    
      <category term="笔记" scheme="https://seven93517.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
